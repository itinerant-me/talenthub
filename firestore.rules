rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isAdmin() {
      return request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    function isAuthenticated() {
      return request.auth != null;
    }

    // Users collection rules
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if request.auth != null 
        && request.auth.uid == userId
        && request.resource.data.isAdmin == false
        && request.resource.data.email == request.auth.token.email;
      allow update: if (request.auth != null && request.auth.uid == userId && !request.resource.data.diff(resource.data).affectedKeys().hasAny(['isAdmin']))
        || (isAdmin() && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['isAdmin']));
      allow delete: if isAdmin();
    }

    // Jobs collection rules
    match /jobs/{jobId} {
      allow read: if true; // Allow public read for all jobs
      allow write: if isAdmin();
    }
    
    // Applications collection rules
    match /applications/{applicationId} {
      allow create: if isAuthenticated() 
        && request.resource.data.userId == request.auth.uid
        && exists(/databases/$(database)/documents/jobs/$(request.resource.data.jobId));
      allow read: if isAuthenticated() 
        && (request.auth.uid == resource.data.userId || isAdmin());
      allow update: if isAdmin() 
        && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['status'])
        && request.resource.data.status in ['pending', 'accepted', 'rejected'];
      allow delete: if isAdmin();
    }
    
    // Activities collection rules
    match /activities/{activityId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isAdmin();
    }
    
    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 